name: CI/CD MLflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "MLproject/Obesity Classification Preprocessing.csv"
  TARGET_VAR: "Label"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # Install dependencies (MLflow & runtime)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow pandas scikit-learn

      # Run MLflow project
      - name: Run MLflow project
        run: |
          mlflow run MLproject \
            -P n_estimators=505 \
            -P max_depth=37 \
            -P dataset="MLproject/Obesity Classification Preprocessing.csv" \
            --env-manager=local

      # Get latest run_id that contains a model artifact
      - name: Get latest MLflow run_id with model
        run: |
          FOUND_PATH=$(find mlruns/0 -type d -name "model" | head -n 1)
          if [ -z "$FOUND_PATH" ]; then
            echo "❌ No model folder found in artifacts."
            exit 1
          fi
          RUN_ID=$(echo "$FOUND_PATH" | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "✅ Found run_id: $RUN_ID"

      # Build Docker Model
      - name: Build Docker model from MLflow run
        run: |
          echo "Using RUN_ID=$RUN_ID"
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "cc"

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Tag the Docker image
      - name: Tag Docker image
        run: |
          docker tag cc ${{ secrets.DOCKER_USERNAME }}/cc:latest

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cc:latest
